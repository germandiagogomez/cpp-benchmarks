srcdir := $(dir $(realpath $(lastword $(MAKEFILE_LIST))))
builddir := $(srcdir)/build/
-include $(builddir)/.config
include $(srcdir)/../make-modules/rules.mk


MKDIR_P := mkdir -p
LN_S := ln -s

COMPILERS := clang++ g++
SOURCES := $(sort $(wildcard $(srcdir)*.cpp))
PROGRAMS_BASIC_NAMES := $(notdir $(SOURCES:.cpp=))

PROGRAMS :=  $(foreach comp,$(COMPILERS),\
	$(foreach bn,$(PROGRAMS_BASIC_NAMES),$(bn)-$(comp)))

VPATH := $(srcdir)

ranges_sieve_INCLUDES := -I$(srcdir)../../submodules/range-v3/include -I$(srcdir)../
raw_sieve_INCLUDES := -I$(srcdir)../

all: plot

$(builddir)/.config: | $(builddir)
	$(file > $(builddir)/.config,include $$(srcdir)/../make-modules/vars.mk)
	@$(LN_S) $(srcdir)/Makefile.in $(builddir)/Makefile
	$(info Created $(builddir) and config file $(builddir)/.config)


config: $(builddir)/.config


$(builddir):
	@$(MKDIR_P) $@


#Rules for programs
$(foreach prog,$(PROGRAMS),$(eval $(call make-program,$(prog))))
$(foreach comp,$(COMPILERS),$(eval $(call make-suffixed-objects,$(comp))))


define make-benchmark
$(builddir)/benchmark-$(1): CXX = $(1)
$(builddir)/benchmark-$(1): $$(foreach basic-name,$$(PROGRAMS_BASIC_NAMES),$$(basic-name)-$(1).dat)
endef

#Create rules benchmark-clang++-3.6, benchmark-g++, etc.
$(foreach comp,$(COMPILERS),$(eval $(call make-benchmark,$(comp))))

$(builddir)/benchmark.png: $(foreach comp,$(COMPILERS), $(builddir)/benchmark-$(comp))
	$(file > $(builddir)/all-benchmarks.dat,Compiler $(subst _,-,$(PROGRAMS_BASIC_NAMES)))
	$(foreach comp,$(COMPILERS),$(file >> $(builddir)/all-benchmarks.dat,$(comp) $(shell $(CAT) $(addsuffix -$(comp).dat,$(PROGRAMS_BASIC_NAMES)))))
	@gnuplot -e "output_plot='$(builddir)/benchmark.png';filename='$(builddir)/all-benchmarks.dat'" $(srcdir)/scripts/plot_data.plt
	$(info Plot $@ created)

plot: $(builddir)/benchmark.png

vars:
	@echo $(SOURCES)
	@echo $(PROGRAMS_BASIC_NAMES)
